{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/MyRoutes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","Message","props","className","s","message","avatar","src","alt","circle","triangle","messagebox","name","text","time","messageData","HW1","Affair","container","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","buttons","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","addUserInKey","inputClass","value","onChange","onKeyPress","disabled","textError","GreetingContainer","users","addUserCallback","setName","setError","alert","Object","keys","length","e","currentTarget","key","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","setText","showAlert","checked","setChecked","column","blue","PreJunior","PATH","MyRoutes","path","element","to","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,OAAS,wBAAwB,WAAa,4BAA4B,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,wB,mBCAtQD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,KAAO,sBAAsB,SAAW,0BAA0B,QAAU,2B,iBCArID,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,UAAY,4BAA4B,GAAK,uB,kBCAvID,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,gBCA1HD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,gBCAxFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,gBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,iBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,iICUTC,MATf,WACI,OACI,mD,gBC2BOC,MAnBf,SAAiBC,GACb,OACI,sBAAKC,UAAWC,IAAEC,QAAlB,UACI,qBAAKF,UAAWC,IAAEE,OAAlB,SACI,qBAAKC,IAAKL,EAAMI,OAAQE,IAAI,aAEhC,qBAAKL,UAAWC,IAAEK,OAAlB,eAEA,qBAAKN,UAAWC,IAAEM,SAAlB,eACA,sBAAKP,UAAWC,IAAEO,WAAlB,UACI,qBAAMR,UAAWC,IAAEQ,KAAnB,SAA0BV,EAAMU,OAChC,qBAAKT,UAAWC,IAAES,KAAlB,SAAyBX,EAAMG,UAC/B,qBAAKF,UAAWC,IAAEU,KAAlB,SAAyBZ,EAAMY,cCrBzCC,EACM,uIADNA,EAEI,iBAFJA,EAGO,sCAHPA,EAII,QAuBKC,MApBf,WACI,OACI,gCACI,uBADJ,aAGI,cAAC,EAAD,CACIV,OAAQS,EACRH,KAAMG,EACNV,QAASU,EACTD,KAAMC,IAGV,uBAGA,2B,uBCEGE,MAhBf,SAAgBf,GAMZ,OACI,sBAAKC,UAAWC,IAAEc,UAAlB,UACI,sBAAKf,UAAWC,IAAEQ,KAAlB,UAAyBV,EAAMiB,OAAOP,KAAtC,OACA,sBAAKT,UAAWC,IAAEgB,SAAlB,UAA6BlB,EAAMiB,OAAOC,SAA1C,OACA,wBAAQC,QARO,WACnBnB,EAAMoB,qBAAqBpB,EAAMiB,OAAOI,MAOpC,mBC4BGC,MAtCf,SAAiBtB,GACb,IAAMuB,EAAgBvB,EAAMwB,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIT,OAAQS,EACRN,qBAAsBpB,EAAMoB,sBAFvBM,EAAEL,QAmBf,OACI,gCAEKE,EACD,sBAAKtB,UAAWC,IAAEyB,QAAlB,UACI,wBAAQR,QAlBL,WACXnB,EAAM4B,UAAU,QAiBR,iBACA,wBAAQT,QAhBJ,WACZnB,EAAM4B,UAAU,SAeR,kBACA,wBAAQT,QAdF,WACdnB,EAAM4B,UAAU,WAaR,oBACA,wBAAQT,QAZL,WACXnB,EAAM4B,UAAU,QAWR,wBC5BVC,EAAoC,CACtC,CAACR,IAAK,EAAGX,KAAM,QAASQ,SAAU,QAClC,CAACG,IAAK,EAAGX,KAAM,QAASQ,SAAU,OAClC,CAACG,IAAK,EAAGX,KAAM,QAASQ,SAAU,OAClC,CAACG,IAAK,EAAGX,KAAM,OAAQQ,SAAU,QACjC,CAACG,IAAK,EAAGX,KAAM,aAAcQ,SAAU,WA4C5BY,MA3Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAILO,EAjBmB,SAACH,EAA4BE,GAEtD,MAAc,SAAXA,EAA0BF,EAAQE,QAAQ,SAAAE,GAAC,MAAmB,SAAfA,EAAElB,YACjC,QAAXgB,EAAyBF,EAAQE,QAAQ,SAAAE,GAAC,MAAmB,QAAfA,EAAElB,YACrC,WAAXgB,EAA4BF,EAAQE,QAAQ,SAAAE,GAAC,MAAmB,WAAfA,EAAElB,YAC9Cc,EAYWK,CAAcL,EAASE,GAG/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIV,KAAMW,EACNP,UAAWA,EACXR,qBAXiB,SAACC,GAAD,OAAiBY,EAXtB,SAACD,EAA4BX,GACrD,OAAOW,EAAQE,QAAQ,SAAAE,GAAC,OAAIA,EAAEf,MAAQA,KAUmBiB,CAAaN,EAASX,OAcvE,uBAGA,2B,yBCxBGkB,EAnB+B,SAAC,GAEzC,IADD7B,EACA,EADAA,KAAM8B,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAAYC,EACnD,EADmDA,aAE9CC,EAAa3C,IAAEwC,MAErB,OAEI,sBAAKzC,UAAWC,IAAEc,UAAlB,UACI,uBAAO8B,MAAOpC,EACPqC,SAAUP,EACVvC,UAAWyC,EAAQG,EAAa,GAChCG,WAAYJ,IACnB,wBAAQK,WAAYP,EAAOvB,QAASsB,EAApC,iBACA,+BAAOE,IACP,qBAAK1C,UAAWyC,GAASxC,IAAEgD,UAA3B,SAAuCR,QCgCpCS,EA9CiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEtB,mBAAiB,IADiD,mBACnFrB,EADmF,KAC7E4C,EAD6E,OAEhEvB,mBAAiB,IAF+C,mBAEnFW,EAFmF,KAE5Ea,EAF4E,KASpFd,EAAU,WAGC,KAAT/B,GAIA8C,MAAM,UAAY9C,GAClB6C,EAAS,IACTD,EAAQ,IAGZD,EAAgB3C,IARZ6C,EAAS,oBAkBbZ,EAAac,OAAOC,KAAKN,GAAOO,OAEpC,OAEI,cAAC,EAAD,CACIjD,KAAMA,EACN8B,gBAjCgB,SAACoB,GACrBN,EAAQM,EAAEC,cAAcf,OACxBS,EAAS,KAgCLd,QAASA,EACTC,MAAOA,EACPC,WAAYA,EACZC,aAjBa,SAACgB,GACJ,UAAVA,EAAEE,KACFrB,Q,QCJGsB,MAzBf,WAAgB,IAAD,EACehC,mBAA0B,IADzC,mBACJqB,EADI,KACGY,EADH,KASX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBZ,MAAOA,EAAOC,gBAZjB,SAAC3C,GACrB,IAAIuD,EAAU,CAAC5C,IAAK6C,cAAMxD,KAAMA,GAChCsD,EAAS,CAACC,GAAF,mBAAcb,QAYlB,uBAGA,2B,+BC2BGe,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPErB,EAOH,EAPGA,SAAUsB,EAOb,EAPaA,aACVrB,EAMH,EANGA,WAAYsB,EAMf,EANeA,QACZ5B,EAKH,EALGA,MACAzC,EAIH,EAJGA,UAAWsE,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMvE,IAAEwC,MAAR,YAAiB6B,GAAgC,IACnEG,EAAmB,UAAMxE,IAAEyE,WAAR,YAAsB1E,GAE/C,OACI,qCACI,mCACImE,KAAM,OACNrB,SArBa,SAACa,GACtBb,GACGA,EAASa,GAEZS,GAAgBA,EAAaT,EAAEC,cAAcf,QAkBrCE,WAhBe,SAACY,GACxBZ,GAAcA,EAAWY,GAEzBU,GACa,UAAVV,EAAEE,KACFQ,KAYKrE,UAAWyE,GAEPF,IAEP9B,GAAS,sBAAMzC,UAAWwE,EAAjB,SAAsC/B,Q,kCC3B7CkC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK5E,EAGR,EAHQA,UACFuE,EAEN,mCACKM,EAAc,UAAMD,EAAM3E,IAAE2E,IAAM3E,IAAE6E,QAAtB,YAAiC9E,GAErD,OACI,oCACIA,UAAW6E,GACPN,K,iBCoBDQ,EA9ByC,SAAC,GASpD,EAPGZ,KAOH,EANGrB,SAMH,EANakC,gBAMZ,IALEhF,EAKH,EALGA,UACAiF,GAIH,EALcX,cAKd,EAJGW,UAEGV,EAEN,4FAKKE,EAAmB,UAAMxE,IAAEiF,SAAR,YAAoBlF,GAAwB,IAErE,OACI,kCACI,mCACImE,KAAM,WACNrB,SAVa,SAACa,KAWd3D,UAAWyE,GAEPF,IAEPU,GAAY,sBAAMjF,UAAWC,IAAEqE,cAAnB,SAAmCW,QC2C7CE,MAzEf,WAAgB,IAAD,EACarD,mBAAiB,IAD9B,mBACJpB,EADI,KACE0E,EADF,KAEL3C,EAAQ/B,EAAO,GAAK,QAEpB2E,EAAY,WACV5C,EACAc,MAAM,gFAENA,MAAM7C,IARH,EAYmBoB,oBAAkB,GAZrC,mBAYJwD,EAZI,KAYKC,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAKvF,UAAWC,IAAEuF,OAAlB,UACI,cAAC,EAAD,CACI3C,MAAOnC,EACP0D,aAAcgB,EACdf,QAASgB,EACT5C,MAAOA,IAIX,cAAC,EAAD,CACIzC,UAAWC,IAAEwF,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIb,KAAG,EACH1D,QAASmE,EAFb,qBAOA,cAAC,EAAD,CAAarC,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIsC,QAASA,EACTN,gBAAiBO,EAFrB,wBAQA,cAAC,EAAD,CAAeD,QAASA,EAASxC,SA/CxB,SAACa,GAAD,OAAsC4B,EAAW5B,EAAEC,cAAc0B,eAkD9E,uBAKA,2BCvDGI,MAbf,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,OCPCC,EACG,cAuBDC,MAnBf,WACI,OACI,8BACI,eAAC,IAAD,mrBAKI,cAAC,IAAD,CAAOC,KAAM,IAAKC,QAAS,cAAC,IAAD,CAAUC,GAAIJ,MACzC,cAAC,IAAD,CAAOE,KAAMF,EAAiBG,QAAS,cAAC,EAAD,MAN3C,gBAQI,cAAC,IAAD,CAAOD,KAAK,MAAMC,QAAS,uDAC3B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAUC,GAAG,iB,QCFvCC,MAff,WACI,OACI,8BAEI,eAAC,IAAD,WAEA,cAAC,EAAD,IAEA,cAAC,EAAD,UCSGC,MAdf,WACI,OACI,sBAAKjG,UAAWC,IAAEgG,IAAlB,UACI,mDAKA,cAAC,EAAD,QCJQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAzE,GACH0E,QAAQ1E,MAAMA,EAAMvC,c","file":"static/js/main.0843dc67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2fk76\",\"triangle\":\"Message_triangle__1HY0D\",\"circle\":\"Message_circle__3zeCS\",\"messagebox\":\"Message_messagebox__2kPil\",\"avatar\":\"Message_avatar__2HUlV\",\"name\":\"Message_name__3ofSG\",\"time\":\"Message_time__1pd_j\",\"text\":\"Message_text__1DEoR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Affairs_container__1SKnR\",\"name\":\"Affairs_name__1TGS4\",\"priority\":\"Affairs_priority__A1y5e\",\"buttons\":\"Affairs_buttons__jasvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Greeting_container__3bkgI\",\"error\":\"Greeting_error__32WwH\",\"textError\":\"Greeting_textError__20kTt\",\"ok\":\"Greeting_ok__Hc7Nm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2J6iN\",\"errorInput\":\"SuperInputText_errorInput__oq6kh\",\"error\":\"SuperInputText_error__3biKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2_iwf\",\"column\":\"HW4_column__2HbjP\",\"testSpanError\":\"HW4_testSpanError__3M0TH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-D3-R\",\"red\":\"SuperButton_red__1Nyv7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1Ul-t\",\"spanClassName\":\"SuperCheckbox_spanClassName__2rzDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2JQx-\"};","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport s from './Message.module.css'\n\n\ntype messagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\nfunction Message(props: messagePropsType) {\n    return (\n        <div className={s.message}>\n            <div className={s.avatar}>\n                <img src={props.avatar} alt=\"avatar\"/>\n            </div>\n            <div className={s.circle}> </div>\n\n            <div className={s.triangle}> </div>\n            <div className={s.messagebox}>\n                <div  className={s.name}>{props.name}</div>\n                <div className={s.text}>{props.message}</div>\n                <div className={s.time}>{props.time}</div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSRv6dZvShX3_LSqgdJdwYZDL6MsrHYy5tjioGjaSFan1RfjUNJVi_A4PdSC-jUs_VxfDo&usqp=CAU',\n    name: 'Roma Stepaniuk',\n    message: 'Hello!  I am front-end developer!! ',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homework 1\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить\n            <AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n    return (\n        <div className={s.container}>\n            <div className={s.name}>{props.affair.name} </div>\n            <div className={s.priority}>{props.affair.priority} </div>\n            <button onClick={deleteCallback}>X</button>\n\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n            <div className={s.buttons}>\n                <button onClick={setAll}>All</button>\n                <button onClick={setHigh}>High</button>\n                <button onClick={setMiddle}>Middle</button>\n                <button onClick={setLow}>Low</button>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'// need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n\n    if(filter === 'high') return affairs.filter( t => t.priority === 'high' ) // need to fix\n    else if(filter === 'low') return affairs.filter( t => t.priority === 'low' ) // need to fix\n    else if(filter === 'middle') return affairs.filter( t => t.priority === 'middle' )\n    else return  affairs // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter( t => t._id !== _id)\n\n\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    addUserInKey: (e: KeyboardEvent<HTMLInputElement>) => void\n\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, addUserInKey} // деструктуризация пропсов\n) => {\n    const inputClass = s.error // need to fix with (?:)\n\n    return (\n\n        <div className={s.container}>\n            <input value={name}\n                   onChange={setNameCallback}\n                   className={error ? inputClass : ''}\n                   onKeyPress={addUserInKey}/>\n            <button disabled={!!error} onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n            <div className={error && s.textError}>{error}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value) // need to fix\n        setError('')\n    }\n\n    const addUser = () => {\n        // need to fix\n        /* name === '' ? setError('error') : alert('Hello, ' + name) */\n        if (name === '') {\n            setError('Name is require')\n            return\n        } else {\n            alert('Hello, ' + name)\n            setError('')\n            setName('')\n        }\n\n        addUserCallback(name)\n    }\n\n    const addUserInKey = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            addUser()\n        }\n\n    }\n\n    let totalUsers = Object.keys(users).length // need to fix\n\n    return (\n\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            addUserInKey={addUserInKey}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let newUser = {_id: v1(), name: name}\n        setUsers([newUser, ...users]) // need to fix\n\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport PreJunior from \"./pages/PreJunior\";\nimport {Navigate, Route, Routes} from \"react-router-dom\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction MyRoutes() {\n    return (\n        <div>\n            <Routes>\n\n\n                в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\n                exact нужен чтоб указать полное совподение (что после '/' ничего не будет)\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                // add routes\n                <Route path=\"404\" element={<h1>404: PAGE NOT FOUND</h1>}/>\n                <Route path=\"*\" element={<Navigate to=\"/404\"/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default MyRoutes\n","import React from 'react'\nimport Header from './Header'\nimport MyRoutes from './MyRoutes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n\n            <HashRouter>\n\n            <Header/>\n\n            <MyRoutes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n          {/*  <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}